logging:
  level:
    org.springframework.core.env: warn
    org.springframework.jndi: warn

server:
  compression:
    enabled: true
    mime-types: application/json,text/css,text/html
    min-response-size: 2048
  error:
    include-message: always
    whitelabel:
      enabled: false
  forward-headers-strategy: native

spring:
  jackson:
    serialization:
      write-dates-as-timestamps: false
  task:
    execution:
      thread-name-prefix: initializr-

initializr:
  env:
    boms:
      azure:
        groupId: com.microsoft.azure
        artifactId: azure-spring-boot-bom
        versionProperty: azure.version
        mappings:
          - compatibilityRange: "[2.0.0.RELEASE,2.1.0.RELEASE)"
            version: 2.0.10
          - compatibilityRange: "[2.1.0.RELEASE, 2.2.0.M1)"
            version: 2.1.10
          - compatibilityRange: "[2.2.0.M1, 2.3.0.M1)"
            version: 2.2.4
          - compatibilityRange: "2.3.0.M1"
            version: 2.3.5
      codecentric-spring-boot-admin:
        groupId: de.codecentric
        artifactId: spring-boot-admin-dependencies
        versionProperty: spring-boot-admin.version
        mappings:
          - compatibilityRange: "[2.0.0.M1,2.1.0.M1)"
            version: 2.0.6
          - compatibilityRange: "[2.1.0.M1,2.2.0.M1)"
            version: 2.1.6
          - compatibilityRange: "[2.2.0.M1,2.3.0.M1)"
            version: 2.2.4
          - compatibilityRange: "[2.3.0.M1,2.4.0-M1)"
            version: 2.3.0
      solace-spring-boot:
        groupId: com.solace.spring.boot
        artifactId: solace-spring-boot-bom
        versionProperty: solace-spring-boot.version
        mappings:
          - compatibilityRange: "[2.2.0.RELEASE, 2.3.0.M1)"
            version: 1.0.0
          - compatibilityRange: "2.3.0.M1"
            version: 1.1.0
      solace-spring-cloud:
        groupId: com.solace.spring.cloud
        artifactId: solace-spring-cloud-bom
        versionProperty: solace-spring-cloud.version
        mappings:
          - compatibilityRange: "[2.2.0.RELEASE, 2.3.0.M1)"
            version: 1.0.0
          - compatibilityRange: "2.3.0.M1"
            version: 1.1.1
      spring-cloud:
        groupId: org.springframework.cloud
        artifactId: spring-cloud-dependencies
        versionProperty: spring-cloud.version
        order: 50
        mappings:
          - compatibilityRange: "[2.0.0.M3, 2.0.0.M5)"
            version: Finchley.M2
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.M5, 2.0.0.M5]"
            version: Finchley.M3
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.M6, 2.0.0.M6]"
            version: Finchley.M4
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.M7, 2.0.0.M7]"
            version: Finchley.M5
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RC1, 2.0.0.RC1]"
            version: Finchley.M6
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RC2,2.0.0.RC2]"
            version: Finchley.M7
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RELEASE,2.0.0.RELEASE]"
            version: Finchley.M9
            repositories: spring-milestones
          - compatibilityRange: "[2.0.1.RELEASE,2.0.2.RELEASE)"
            version: Finchley.RC1
            repositories: spring-milestones
          - compatibilityRange: "[2.0.2.RELEASE,2.0.3.RELEASE)"
            version: Finchley.RC2
            repositories: spring-milestones
          - compatibilityRange: "[2.0.3.RELEASE,2.0.x.BUILD-SNAPSHOT)"
            version: Finchley.SR4
          - compatibilityRange: "[2.0.x.BUILD-SNAPSHOT,2.1.0.M3)"
            version: Finchley.BUILD-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
          - compatibilityRange: "[2.1.0.M3,2.1.0.RELEASE)"
            version: Greenwich.M1
            repositories: spring-milestones
          - compatibilityRange: "[2.1.0.RELEASE,2.1.x.BUILD-SNAPSHOT)"
            version: Greenwich.SR6
          - compatibilityRange: "[2.1.x.BUILD-SNAPSHOT,2.2.0.M4)"
            version: Greenwich.BUILD-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
          - compatibilityRange: "[2.2.0.M4,2.3.x.BUILD-SNAPSHOT)"
            version: Hoxton.SR8
          - compatibilityRange: "[2.3.x.BUILD-SNAPSHOT, 2.4.0.M1)"
            version: Hoxton.BUILD-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
          - compatibilityRange: "[2.4.0.M1,2.4.0.M1]"
            version: 2020.0.0-M3
            repositories: spring-milestones
          - compatibilityRange: "[2.4.0.M2,2.4.0-M3]"
            version: 2020.0.0-M4
            repositories: spring-milestones
          - compatibilityRange: "2.4.0-M4"
            version: 2020.0.0-SNAPSHOT
            repositories: spring-snapshots,spring-milestones
      spring-cloud-alibaba:
        groupId: com.alibaba.cloud
        artifactId: spring-cloud-alibaba-dependencies
        versionProperty: spring-cloud-alibaba.version
        mappings:
          - compatibilityRange: "[2.2.0.RELEASE,2.3.0.M1)"
            version: 2.2.1.RELEASE
      spring-cloud-services:
        groupId: io.pivotal.spring.cloud
        artifactId: spring-cloud-services-dependencies
        versionProperty: spring-cloud-services.version
        additionalBoms: [spring-cloud]
        mappings:
          - compatibilityRange: "[2.0.0.RELEASE,2.1.0.RELEASE)"
            version: 2.0.3.RELEASE
          - compatibilityRange: "[2.1.0.RELEASE,2.2.0.RELEASE)"
            version: 2.1.8.RELEASE
          - compatibilityRange: "[2.2.0.RELEASE,2.3.0.RELEASE)"
            version: 2.2.6.RELEASE
          - compatibilityRange: "[2.3.0.RELEASE,2.4.0-M1)"
            version: 2.3.0.RELEASE
      spring-statemachine:
        groupId: org.springframework.statemachine
        artifactId: spring-statemachine-bom
        versionProperty: spring-statemachine.version
        mappings:
          - compatibilityRange: "[2.0.0.RC1,2.0.0.RC1]"
            version: 2.0.0.M4
            repositories: spring-milestones
          - compatibilityRange: "[2.0.0.RC2,2.0.0.RC2]"
            version: 2.0.0.M5
            repositories: spring-milestones
          - compatibilityRange: "2.0.0.RELEASE"
            version: 2.0.1.RELEASE
      testcontainers:
        groupId: org.testcontainers
        artifactId: testcontainers-bom
        version: 1.14.3
        versionProperty: testcontainers.version
      vaadin:
        groupId: com.vaadin
        artifactId: vaadin-bom
        versionProperty: vaadin.version
        mappings:
          - compatibilityRange: "[2.0.0.M1,2.1.0.M1)"
            version: 10.0.17
          - compatibilityRange: "[2.1.0.M1,2.4.0-M1)"
            version: 14.4.2
      wavefront:
        groupId: com.wavefront
        artifactId: wavefront-spring-boot-bom
        versionProperty: wavefront.version
        mappings:
          - compatibilityRange: "[2.1.0.RELEASE,2.4.0-M1)"
            version: 2.0.2
          - compatibilityRange: "2.4.0-M1"
            version: 2.1.0-SNAPSHOT
            repositories: spring-snapshots
    gradle:
      dependency-management-plugin-version: 1.0.9.RELEASE
    kotlin:
      mappings:
        - compatibilityRange: "[1.5.0.RELEASE,2.0.0.M1)"
          version: 1.2.51
    platform:
      compatibility-range: "2.0.0.RELEASE"
      v1-format-compatibility-range: "[2.0.0.RELEASE,2.4.0-M1)"
      v2-format-compatibility-range: "2.4.0-M1"
    repositories:
      sonatype-snapshots:
        name: Sonatype Snapshots
        url: https://oss.sonatype.org/content/repositories/snapshots/
        snapshotsEnabled: true
  dependencies:
    - name: Developer Tools
      content:
        - name: Spring Boot DevTools
          id: devtools
          groupId: org.springframework.boot
          artifactId: spring-boot-devtools
          scope: runtime
          description: Provides fast application restarts, LiveReload, and configurations for enhanced development experience.
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#using-boot-devtools
        - name: Lombok
          id: lombok
          groupId: org.projectlombok
          artifactId: lombok
          scope: annotationProcessor
          description: Java annotation library which helps to reduce boilerplate code.
          starter: false
        - name: Spring Configuration Processor
          id: configuration-processor
          groupId: org.springframework.boot
          artifactId: spring-boot-configuration-processor
          scope: annotationProcessor
          description: Generate metadata for developers to offer contextual help and "code completion" when working with custom configuration keys (ex.application.properties/.yml files).
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#configuration-metadata-annotation-processor
    - name: Web
      content:
        - name: Spring Web
          id: web
          description: Build web, including RESTful, applications using Spring MVC. Uses Apache Tomcat as the default embedded container.
          facets:
            - web
            - json
          links:
            - rel: guide
              href: https://spring.io/guides/gs/rest-service/
              description: Building a RESTful Web Service
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-developing-web-applications
            - rel: guide
              href: https://spring.io/guides/gs/serving-web-content/
              description: Serving Web Content with Spring MVC
            - rel: guide
              href: https://spring.io/guides/tutorials/bookmarks/
              description: Building REST services with Spring
        - name: Spring Reactive Web
          id: webflux
          description: Build reactive web applications with Spring WebFlux and Netty.
          facets:
            - json
            - reactive
        - name: Rest Repositories
          id: data-rest
          facets:
            - json
          description: Exposing Spring Data repositories over REST via Spring Data REST.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-rest/
              description: Accessing JPA Data with REST
            - rel: guide
              href: https://spring.io/guides/gs/accessing-neo4j-data-rest/
              description: Accessing Neo4j Data with REST
            - rel: guide
              href: https://spring.io/guides/gs/accessing-mongodb-data-rest/
              description: Accessing MongoDB Data with REST
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-use-exposing-spring-data-repositories-rest-endpoint
        - name: Spring Session
          id: session
          groupId: org.springframework.session
          artifactId: spring-session-core
          description: Provides an API and implementations for managing user session information.
          starter: false
        - name: Rest Repositories HAL Explorer
          id: data-rest-explorer
          description: Browsing Spring Data REST repositories in your browser.
          starter: false
          compatibilityRange: "2.2.0-M1"
          groupId: org.springframework.data
          artifactId: spring-data-rest-hal-explorer
        - name: Rest Repositories HAL Browser
          id: data-rest-hal
          description: Browsing Spring Data REST repositories in your browser.
          starter: false
          compatibilityRange: "[2.0.0.RELEASE,2.2.0-M1)"
          groupId: org.springframework.data
          artifactId: spring-data-rest-hal-browser
        - name: Spring HATEOAS
          id: hateoas
          description: Eases the creation of RESTful APIs that follow the HATEOAS principle when working with Spring / Spring MVC.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/rest-hateoas/
              description: Building a Hypermedia-Driven RESTful Web Service
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-hateoas
        - name: Spring Web Services
          id: web-services
          description: Facilitates contract-first SOAP development. Allows for the creation of flexible web services using one of the many ways to manipulate XML payloads.
          aliases:
           - ws
          links:
           - rel: guide
             href: https://spring.io/guides/gs/producing-web-service/
             description: Producing a SOAP web service
           - rel: reference
             href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-webservices
        - name: Jersey
          id: jersey
          description: Framework for developing RESTful Web Services in Java that provides support for JAX-RS APIs.
          facets:
           - json
          links:
           - rel: reference
             href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jersey
        - name: Vaadin
          id: vaadin
          facets:
           - web
          groupId: com.vaadin
          artifactId: vaadin-spring-boot-starter
          description: Java framework for building rich client apps based on Web components.
          bom: vaadin
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          links:
           - rel: guide
             href: https://spring.io/guides/gs/crud-with-vaadin/
             description: Creating CRUD UI with Vaadin
           - rel: reference
             href: https://vaadin.com/spring
    - name: Template Engines
      content:
        - name: Thymeleaf
          id: thymeleaf
          description: A modern server-side Java template engine for both web and standalone environments. Allows HTML to be correctly displayed in browsers and as static prototypes.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/handling-form-submission/
              description: Handling Form Submission
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
        - name: Apache Freemarker
          id: freemarker
          description: Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
        - name: Mustache
          id: mustache
          description: Logic-less Templates. There are no if statements, else clauses, or for loops. Instead there are only tags.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
        - name: Groovy Templates
          id: groovy-templates
          description: Groovy templating engine.
          facets:
            - web
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines
    - name: Security
      content:
        - name: Spring Security
          id: security
          description: Highly customizable authentication and access-control framework for Spring applications.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/securing-web/
              description: Securing a Web Application
            - rel: guide
              href: https://spring.io/guides/tutorials/spring-boot-oauth2/
              description: Spring Boot and OAuth2
            - rel: guide
              href: https://spring.io/guides/gs/authenticating-ldap/
              description: Authenticating a User with LDAP
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-security
        - name: OAuth2 Client
          id: oauth2-client
          description: Spring Boot integration for Spring Security's OAuth2/OpenID Connect client features.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-security-oauth2-client
        - name: OAuth2 Resource Server
          id: oauth2-resource-server
          description: Spring Boot integration for Spring Security's OAuth2 resource server features.
          compatibilityRange: 2.1.0.M2
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-security-oauth2-server
        - name: Spring LDAP
          id: data-ldap
          description: Makes it easier to build Spring based applications that use the Lightweight Directory Access Protocol.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-ldap
        - name: Okta
          id: okta
          description: Okta specific configuration for Spring Security/Spring Boot OAuth2 features. Enable your Spring Boot application to work with Okta via OAuth 2.0/OIDC.
          groupId: com.okta.spring
          artifactId: okta-spring-boot-starter
          compatibilityRange: "[2.1.2.RELEASE,2.4.0-M1)"
          mappings:
            - compatibilityRange: "[2.1.2.RELEASE,2.2.0.M1)"
              version: 1.2.1
            - compatibilityRange: "[2.2.0.M1,2.4.0-M1)"
              version: 1.4.0
          links:
            - rel: guide
              href: https://github.com/okta/samples-java-spring/tree/master/okta-hosted-login
              description: Okta-Hosted Login Page Example
            - rel: guide
              href: https://github.com/okta/samples-java-spring/tree/master/custom-login
              description: Custom Login Page Example
            - rel: guide
              href: https://github.com/okta/samples-java-spring/tree/master/resource-server
              description: Okta Spring Security Resource Server Example
            - rel: reference
              href: https://github.com/okta/okta-spring-boot/blob/master/README.md
    - name: SQL
      content:
        - name: JDBC API
          id: jdbc
          description: Database Connectivity API that defines how a client may connect and query a database.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/relational-data-access/
              description: Accessing Relational Data using JDBC with Spring
            - rel: guide
              href: https://spring.io/guides/gs/managing-transactions/
              description: Managing Transactions
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-sql
        - name: Spring Data JPA
          id: data-jpa
          description: Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate.
          facets:
            - jpa
          aliases:
            - jpa
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-jpa/
              description: Accessing Data with JPA
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jpa-and-spring-data
        - name: Spring Data JDBC
          id: data-jdbc
          compatibilityRange: "2.1.0.RELEASE"
          description: Persist data in SQL stores with plain JDBC using Spring Data.
          links:
            - rel: guide
              href: https://github.com/spring-projects/spring-data-examples/tree/master/jdbc/basics
              description: Using Spring Data JDBC
            - rel: reference
              href: https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/
        - name: Spring Data R2DBC
          id: data-r2dbc
          compatibilityRange: "2.3.0.M3"
          description: Provides Reactive Relational Database Connectivity to persist data in SQL stores using Spring Data in reactive applications.
          facets:
            - reactive
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-r2dbc/
              description: Acessing data with R2DBC
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/spring-boot-features.html#boot-features-r2dbc
            - rel: home
              href: https://r2dbc.io
              description: R2DBC Homepage
        - name: MyBatis Framework
          id: mybatis
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          description: Persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations.
          links:
            - rel: guide
              href: https://github.com/mybatis/spring-boot-starter/wiki/Quick-Start
              description: MyBatis Quick Start
            - rel: reference
              href: https://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/
          groupId: org.mybatis.spring.boot
          artifactId: mybatis-spring-boot-starter
          mappings:
            - compatibilityRange: "[2.0.0.RELEASE,2.1.0.RELEASE)"
              version: 2.0.1
            - compatibilityRange: "[2.1.0.RELEASE,2.4.0-M1)"
              version: 2.1.3
        - name: Liquibase Migration
          id: liquibase
          description: Liquibase database migration and source control library.
          groupId: org.liquibase
          artifactId: liquibase-core
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-execute-liquibase-database-migrations-on-startup
        - name: Flyway Migration
          id: flyway
          description: Version control for your database so you can migrate from any version (incl. an empty database) to the latest version of the schema.
          groupId: org.flywaydb
          artifactId: flyway-core
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-execute-flyway-database-migrations-on-startup
        - name: JOOQ Access Layer
          id: jooq
          description: Generate Java code from your database and build type safe SQL queries through a fluent API.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jooq
        - name: IBM DB2 Driver
          id: db2
          compatibilityRange: 2.2.0.M6
          description: A JDBC driver that provides access to IBM DB2.
          groupId: com.ibm.db2
          artifactId: jcc
          scope: runtime
          starter: false
        - name: Apache Derby Database
          id: derby
          description: An open source relational database implemented entirely in Java.
          groupId: org.apache.derby
          artifactId: derby
          scope: runtime
          starter: false
        - name: H2 Database
          id: h2
          description: Provides a fast in-memory database that supports JDBC API and R2DBC access, with a small (2mb) footprint. Supports embedded and server modes as well as a browser based console application.
          groupId: com.h2database
          artifactId: h2
          scope: runtime
          starter: false
        - name: HyperSQL Database
          id: hsql
          description: Lightweight 100% Java SQL Database Engine.
          groupId: org.hsqldb
          artifactId: hsqldb
          scope: runtime
          starter: false
        - name: MS SQL Server Driver
          id: sqlserver
          description: A JDBC and R2DBC driver that provides access to Microsoft SQL Server and Azure SQL Database from any Java application.
          groupId: com.microsoft.sqlserver
          artifactId: mssql-jdbc
          scope: runtime
          starter: false
        - name: MySQL Driver
          id: mysql
          description: MySQL JDBC and R2DBC driver.
          groupId: mysql
          artifactId: mysql-connector-java
          scope: runtime
          starter: false
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-mysql/
              description: Accessing data with MySQL
        - name: Oracle Driver
          id: oracle
          compatibilityRange: 2.2.0.RC1
          description: A JDBC driver that provides access to Oracle.
          groupId: com.oracle.database.jdbc
          artifactId: ojdbc8
          scope: runtime
          starter: false
          mappings:
            - compatibilityRange: "[2.2.0.RC1,2.2.8.RELEASE)"
              groupId: com.oracle.ojdbc
        - name: PostgreSQL Driver
          id: postgresql
          description: A JDBC and R2DBC driver that allows Java programs to connect to a PostgreSQL database using standard, database independent Java code.
          groupId: org.postgresql
          artifactId: postgresql
          scope: runtime
          starter: false
    - name: NoSQL
      content:
        - name: Spring Data Redis (Access+Driver)
          id: data-redis
          description: Advanced and thread-safe Java Redis client for synchronous, asynchronous, and reactive usage. Supports Cluster, Sentinel, Pipelining, Auto-Reconnect, Codecs and much more.
          aliases:
            - redis
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-redis/
              description: Messaging with Redis
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-redis
        - name: Spring Data Reactive Redis
          id: data-redis-reactive
          description: Access Redis key-value data stores in a reactive fashion with Spring Data Redis.
          facets:
            - reactive
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-redis/
              description: Messaging with Redis
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-redis
        - name: Spring Data MongoDB
          id: data-mongodb
          description: Store data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-mongodb/
              description: Accessing Data with MongoDB
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-mongodb
        - name: Spring Data Reactive MongoDB
          id: data-mongodb-reactive
          description: Provides asynchronous stream processing with non-blocking back pressure for MongoDB.
          facets:
            - reactive
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-mongodb
        - name: Spring Data Elasticsearch (Access+Driver)
          id: data-elasticsearch
          description: A distributed, RESTful search and analytics engine with Spring Data Elasticsearch.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-elasticsearch
        - name: Spring Data for Apache Solr
          id: data-solr
          description: Apache Solr is an open source enterprise search platform built on Apache Lucene.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-solr
        - name: Spring Data for Apache Cassandra
          id: data-cassandra
          description: A free and open-source, distributed, NoSQL database management system that offers high-scalability and high-performance.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-cassandra
        - name: Spring Data Reactive for Apache Cassandra
          id: data-cassandra-reactive
          description: Access Cassandra NoSQL Database in a reactive fashion.
          facets:
            - reactive
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-cassandra
        - name: Spring for Apache Geode
          id: geode
          compatibilityRange: "2.2.0.M5"
          groupId: org.springframework.geode
          artifactId: spring-geode-starter
          description: Apache Geode is a data management platform that helps users build real-time, highly concurrent, highly performant and reliable Spring Boot applications at scale that is compatible with Pivotal Cloud Cache.
          mappings:
            - compatibilityRange: "[2.2.0.M5,2.3.0.M1)"
              version: 1.2.10.RELEASE
            - compatibilityRange: "[2.3.0.M1,2.4.0-M1)"
              version: 1.3.4.RELEASE
            - compatibilityRange: "2.4.0-M1"
              version: 1.4.0-M4
              repository: spring-milestones
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/
            - rel: guide
              href: https://github.com/spring-projects/spring-boot-data-geode/tree/master/spring-geode-samples
              description: Using Spring for Apache Geode
            - rel: other
              href: https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/#geode-gemfire-switch
              description: Switch from Apache Geode to Pivotal Cloud Cache
        - name: Spring Data Couchbase
          id: data-couchbase
          description: NoSQL document-oriented database that offers in memory-first architecture, geo-distributed deployments, and workload isolation.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-couchbase
        - name: Spring Data Reactive Couchbase
          id: data-couchbase-reactive
          description: Access Couchbase NoSQL database in a reactive fashion with Spring Data Couchbase.
          facets:
            - reactive
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-couchbase
        - name: Spring Data Neo4j
          id: data-neo4j
          description: An open source NoSQL database that stores data structured as graphs consisting of nodes, connected by relationships.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/accessing-data-neo4j/
              description: Accessing Data with Neo4j
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-neo4j
    - name: Messaging
      content:
        - name: Spring Integration
          id: integration
          description: Adds support for Enterprise Integration Patterns. Enables lightweight messaging and supports integration with external systems via declarative adapters.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/integration/
              description: Integrating Data
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-integration
        - name: Spring for RabbitMQ
          id: amqp
          description: Gives your applications a common platform to send and receive messages, and your messages a safe place to live until received.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-rabbitmq/
              description: Messaging with RabbitMQ
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-amqp
        - name: Spring for Apache Kafka
          id: kafka
          description: Publish, subscribe, store, and process streams of records.
          groupId: org.springframework.kafka
          artifactId: spring-kafka
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-kafka
        - name: Spring for Apache Kafka Streams
          id: kafka-streams
          description: Building stream processing applications with Apache Kafka Streams.
          groupId: org.apache.kafka
          artifactId: kafka-streams
          starter: false
          links:
            - rel: guide
              href: https://github.com/spring-cloud/spring-cloud-stream-samples/tree/master/kafka-streams-samples
              description: Samples for using Apache Kafka Streams with Spring Cloud stream
            - rel: reference
              href: https://docs.spring.io/spring-kafka/docs/current/reference/html/_reference.html#kafka-streams
              description: Apache Kafka Streams Support
            - rel: reference
              href: https://docs.spring.io/spring-cloud-stream/docs/current/reference/htmlsingle/#_kafka_streams_binding_capabilities_of_spring_cloud_stream
              description: Apache Kafka Streams Binding Capabilities of Spring Cloud Stream
        - name: Spring for Apache ActiveMQ 5
          id: activemq
          description: Spring JMS support with Apache ActiveMQ 'Classic'.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-jms/
              description: Java Message Service API via Apache ActiveMQ Classic.
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-activemq
        - name: Spring for Apache ActiveMQ Artemis
          id: artemis
          description: Spring JMS support with Apache ActiveMQ Artemis.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-jms/
              description: Messaging with JMS
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-artemis
        - name: WebSocket
          id: websocket
          description: Build WebSocket applications with SockJS and STOMP.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/messaging-stomp-websocket/
              description: Using WebSocket to build an interactive web application
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-websockets
        - name: RSocket
          id: rsocket
          description: RSocket.io applications with Spring Messaging and Netty.
          compatibilityRange: 2.2.0.M2
          facets:
            - reactive
        - name: Apache Camel
          id: camel
          compatibilityRange: "[2.0.0.M1,2.4.0-M1)"
          mappings:
            - compatibilityRange: "[2.0.0.M1,2.1.0.M1)"
              version: 2.22.4
              groupId: org.apache.camel
            - compatibilityRange: "[2.1.0.M1,2.2.0.M1)"
              version: 2.25.2
              groupId: org.apache.camel
            - compatibilityRange: "[2.2.0.M1,2.3.0.M1)"
              version: 3.3.0
            - compatibilityRange: "[2.3.0.M1,2.4.0-M1)"
              version: 3.5.0
          description: Apache Camel is an open source integration framework that empowers you to quickly and easily integrate various systems consuming or producing data.
          groupId: org.apache.camel.springboot
          artifactId: camel-spring-boot-starter
          links:
            - rel: guide
              href: https://camel.apache.org/camel-spring-boot/latest/spring-boot.html
              description: Using Apache Camel with Spring Boot
        - name: Solace PubSub+
          bom: solace-spring-boot
          id: solace
          compatibilityRange: "[2.2.0.RELEASE,2.4.0-M1)"
          description: Connect to a Solace PubSub+ Advanced Event Broker to publish, subscribe, request/reply and store/replay messages
          groupId: com.solace.spring.boot
          artifactId: solace-spring-boot-starter
          links:
            - rel: reference
              href: https://www.solace.dev/start-spring-io-help/
              description: Getting started with Solace and Spring
            - rel: reference
              href: https://solace.dev
              description: Solace Developer Portal
    - name: I/O
      content:
        - name: Spring Batch
          id: batch
          description: Batch applications with transactions, retry/skip and chunk based processing.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/batch-processing/
              description: Creating a Batch Service
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-batch-applications
        - name: Validation
          id: validation
          description: JSR-303 validation with Hibernate validator.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-validation
        - name: Java Mail Sender
          id: mail
          description: Send email using Java Mail and Spring Framework's JavaMailSender.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-email
        - name: Quartz Scheduler
          id: quartz
          description: Schedule jobs using Quartz.
        - name: Spring cache abstraction
          id: cache
          description: Provides cache-related operations, such as the ability to update the content of the cache, but does not provide the actual data store.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/caching/
              description: Caching Data with Spring
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-caching
    - name: Ops
      content:
        - name: Spring Boot Actuator
          id: actuator
          description: Supports built in (or custom) endpoints that let you monitor and manage your application - such as application health, metrics, sessions, etc.
          links:
            - rel: guide
              href: https://spring.io/guides/gs/actuator-service/
              description: Building a RESTful Web Service with Spring Boot Actuator
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#production-ready
        - name: Codecentric's Spring Boot Admin (Client)
          id: codecentric-spring-boot-admin-client
          groupId: de.codecentric
          artifactId: spring-boot-admin-starter-client
          description: Required for your application to register with a Codecentric's Spring Boot Admin Server instance.
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          bom: codecentric-spring-boot-admin
          links:
            - rel: reference
              href: https://codecentric.github.io/spring-boot-admin/current/#getting-started
        - name: Codecentric's Spring Boot Admin (Server)
          id: codecentric-spring-boot-admin-server
          groupId: de.codecentric
          artifactId: spring-boot-admin-starter-server
          description: A community project to manage and monitor your Spring Boot applications. Provides a UI on top of the Spring Boot Actuator endpoints.
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          bom: codecentric-spring-boot-admin
          links:
            - rel: reference
              href: https://codecentric.github.io/spring-boot-admin/current/#getting-started
    - name: Observability
      content:
        - name: Datadog
          id: datadog
          groupId: io.micrometer
          artifactId: micrometer-registry-datadog
          scope: runtime
          starter: false
          description: Datadog is a dimensional time-series SAAS with built-in dashboarding and alerting.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-datadog
        - name: Influx
          id: influx
          groupId: io.micrometer
          artifactId: micrometer-registry-influx
          scope: runtime
          starter: false
          description: Support real-time stream processing and storage of time-series data.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-influx
        - name: Graphite
          id: graphite
          groupId: io.micrometer
          artifactId: micrometer-registry-graphite
          scope: runtime
          starter: false
          description: Hierarchical metrics systems backed by a fixed-size database.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-graphite
        - name: New Relic
          id: new-relic
          groupId: io.micrometer
          artifactId: micrometer-registry-new-relic
          scope: runtime
          starter: false
          description: SaaS offering with a full UI and a query language called NRQL.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-new-relic
        - name: Prometheus
          id: prometheus
          groupId: io.micrometer
          artifactId: micrometer-registry-prometheus
          scope: runtime
          starter: false
          description: An in-memory dimensional time series database with a simple built-in UI, a custom query language, and math operations.
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-prometheus
        - name: Wavefront
          id: wavefront
          groupId: com.wavefront
          artifactId: wavefront-spring-boot-starter
          bom: wavefront
          description: Tanzu Observability by Wavefront is a SaaS-based metrics monitoring and analytics platform that lets you visualize, query, and alert over data from across your entire stack (infrastructure, network, custom app metrics, business KPIs, etc.)
          compatibilityRange: "2.1.0.RELEASE"
          links:
            - rel: reference
              href: https://docs.wavefront.com/wavefront_springboot.html
              description: Wavefront for Spring Boot documentation
            - rel: reference
              href: https://github.com/wavefrontHQ/wavefront-spring-boot
              description: Wavefront for Spring Boot repository
    - name: Testing
      content:
        - name: Spring REST Docs
          id: restdocs
          description: Document RESTful services by combining hand-written with Asciidoctor and auto-generated snippets produced with Spring MVC Test.
          groupId: org.springframework.restdocs
          artifactId: spring-restdocs-mockmvc
          scope: test
          starter: false
        - name: Testcontainers
          id: testcontainers
          description: Provide lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.
          groupId: org.testcontainers
          artifactId: junit-jupiter
          bom: testcontainers
          scope: test
          starter: false
          links:
            - rel: reference
              href: https://www.testcontainers.org/
        - name: Contract Verifier
          bom: spring-cloud
          id: cloud-contract-verifier
          description: Moves TDD to the level of software architecture by enabling Consumer Driven Contract (CDC) development.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-contract-verifier
          scope: test
          links:
            - rel: guide
              href: https://cloud.spring.io/spring-cloud-contract/spring-cloud-contract.html#_spring_cloud_contract_verifier_setup
              description: Spring Cloud Contract Verifier Setup
        - name: Contract Stub Runner
          bom: spring-cloud
          id: cloud-contract-stub-runner
          description: Stub Runner for HTTP/Messaging based communication. Allows creating WireMock stubs from RestDocs tests.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-contract-stub-runner
          scope: test
        - name: Embedded LDAP Server
          id: unboundid-ldap
          description: Provides a platform neutral way for running a LDAP server in unit tests.
          groupId: com.unboundid
          artifactId: unboundid-ldapsdk
          scope: test
          starter: false
          links:
            - rel: reference
              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/boot-features-nosql.html#boot-features-ldap-embedded
        - name: Embedded MongoDB Database
          id: flapdoodle-mongo
          description: Provides a platform neutral way for running MongoDB in unit tests.
          groupId: de.flapdoodle.embed
          artifactId: de.flapdoodle.embed.mongo
          scope: test
          starter: false
    - name: Spring Cloud
      bom: spring-cloud
      content:
        - name: Cloud Bootstrap
          id: cloud-starter
          description: Non-specific Spring Cloud features, unrelated to external libraries or integrations (e.g. Bootstrap context and @RefreshScope).
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter
          links:
            - rel: reference
              href: https://spring.io/projects/spring-cloud-commons
        - name: Function
          id: cloud-function
          groupId: org.springframework.cloud
          artifactId: spring-cloud-function-context
          starter: false
          description: Promotes the implementation of business logic via functions and supports a uniform programming model across serverless providers, as well as the ability to run standalone (locally or in a PaaS).
          links:
            - rel: reference
              href: https://cloud.spring.io/spring-cloud-function/
            - rel: sample
              href: https://github.com/spring-cloud/spring-cloud-function/tree/master/spring-cloud-function-samples
              description: Various sample apps using Spring Cloud Function
        - name: Task
          id: cloud-task
          description: Allows a user to develop and run short lived microservices using Spring Cloud. Run them locally, in the cloud, and on Spring Cloud Data Flow.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-task
    - name: Spring Cloud Security
      bom: spring-cloud
      content:
        - name: Cloud Security
          id: cloud-security
          description: A declarative model which can be heavily configured externally (or centrally) lends itself to the implementation of large systems of co-operating, remote components, usually with a central indentity management service.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-security
        - name: Cloud OAuth2
          id: cloud-oauth2
          description: OAuth2 and distributed application patterns with spring-cloud-security.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-oauth2
    - name: Spring Cloud Tools
      content:
        - name: Cloud Connectors
          id: cloud-connectors
          description: Simplifies the process of connecting to services and gaining operating environment awareness in cloud platforms such as Cloud Foundry and Heroku.
          compatibilityRange: "[2.0.0.RELEASE,2.3.0.M1)"
        - name: Open Service Broker
          id: open-service-broker
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          description: Framework for building Spring Boot apps that implement the Open Service Broker API, which can deliver services to applications running within cloud native platforms such as Cloud Foundry, Kubernetes and OpenShift.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-open-service-broker
          mappings:
            - compatibilityRange: "[2.0.0.RELEASE,2.1.0.M1)"
              version: 2.1.3.RELEASE
              artifactId: spring-cloud-starter-open-service-broker-webmvc
            - compatibilityRange: "[2.1.0.M1,2.2.0.M1)"
              version: 3.0.4.RELEASE
            - compatibilityRange: "[2.2.0.M1,2.4.0-M1)"
              version: 3.1.1.RELEASE
          links:
            - rel: reference
              href: https://docs.spring.io/spring-cloud-open-service-broker/docs/current/reference/html5/
            - rel: guide
              href: https://github.com/spring-cloud-samples/bookstore-service-broker
              description: Using Spring Cloud Open Service Broker
    - name: Spring Cloud Config
      bom: spring-cloud
      content:
        - name: Config Client
          id: cloud-config-client
          description: Client that connects to a Spring Cloud Config Server to fetch the application's configuration.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-config
        - name: Config Server
          id: cloud-config-server
          description: Central management for configuration via Git, SVN, or HashiCorp Vault.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-config-server
          links:
            - rel: guide
              href: https://spring.io/guides/gs/centralized-configuration/
              description: Centralized Configuration
        - name: Vault Configuration
          id: cloud-starter-vault-config
          description: Provides client-side support for externalized configuration in a distributed system. Using HashiCorp's Vault you have a central place to manage external secret properties for applications across all environments.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-vault-config
        - name: Apache Zookeeper Configuration
          id: cloud-starter-zookeeper-config
          description: Enable and configure common patterns inside your application and build large distributed systems with Apache Zookeeper based components. The provided patterns include Service Discovery and Configuration.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-zookeeper-config
          mappings:
            - compatibilityRange: "[2.0.0.RELEASE,2.2.0.M4)"
              starter: false
        - name: Consul Configuration
          id: cloud-starter-consul-config
          description: Enable and configure the common patterns inside your application and build large distributed systems with Hashicorp’s Consul. The patterns provided include Service Discovery, Distributed Configuration and Control Bus.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-consul-config
          mappings:
            - compatibilityRange: "[2.0.0.RELEASE,2.2.0.M4)"
              starter: false
    - name: Spring Cloud Discovery
      bom: spring-cloud
      content:
        - name: Eureka Discovery Client
          id: cloud-eureka
          description: a REST based service for locating services for the purpose of load balancing and failover of middle-tier servers.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-eureka-client
        - name: Eureka Server
          id: cloud-eureka-server
          description: spring-cloud-netflix Eureka Server.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-eureka-server
          links:
            - rel: guide
              href: https://spring.io/guides/gs/service-registration-and-discovery/
              description: Service Registration and Discovery
        - name: Apache Zookeeper Discovery
          id: cloud-starter-zookeeper-discovery
          description: Service discovery with Apache Zookeeper.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-zookeeper-discovery
        - name: Cloud Foundry Discovery
          id: cloud-cloudfoundry-discovery
          description: Service discovery with Cloud Foundry.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-cloudfoundry-discovery
        - name: Consul Discovery
          id: cloud-starter-consul-discovery
          description: Service discovery with Hashicorp Consul.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-consul-discovery
    - name: Spring Cloud Routing
      bom: spring-cloud
      content:
        - name: Zuul [Maintenance]
          id: cloud-zuul
          description: Intelligent and programmable routing with Spring Cloud Netflix Zuul.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-zuul
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          links:
            - rel: guide
              href: https://spring.io/guides/gs/routing-and-filtering/
              description: Routing and Filtering
        - name: Gateway
          id: cloud-gateway
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-gateway
          description: Provides a simple, yet effective way to route to APIs and provide cross cutting concerns to them such as security, monitoring/metrics, and resiliency.
          links:
            - rel: guide
              href: https://github.com/spring-cloud-samples/spring-cloud-gateway-sample
              description: Using Spring Cloud Gateway
        - name: Ribbon [Maintenance]
          id: cloud-ribbon
          description: Client-side load-balancing with Spring Cloud Netflix and Ribbon.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-ribbon
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          links:
            - rel: guide
              href: https://spring.io/guides/gs/client-side-load-balancing/
              description: Client-side load-balancing with Ribbon and Spring Cloud
        - name: OpenFeign
          id: cloud-feign
          description: Declarative REST Client. OpenFeign creates a dynamic implementation of an interface decorated with JAX-RS or Spring MVC annotations.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-openfeign
        - name: Cloud LoadBalancer
          id: cloud-loadbalancer
          compatibilityRange: "2.2.0.M4"
          description: Client-side load-balancing with Spring Cloud LoadBalancer.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-loadbalancer
          links:
            - rel: guide
              href: https://spring.io/guides/gs/spring-cloud-loadbalancer/
              description: Client-side load-balancing with Spring Cloud LoadBalancer
            - rel: reference
              href: https://cloud.spring.io/spring-cloud-static/spring-cloud-commons/current/reference/html/#spring-cloud-loadbalancer
    - name: Spring Cloud Circuit Breaker
      bom: spring-cloud
      content:
        - name: Resilience4J
          id: cloud-resilience4j
          compatibilityRange: "2.2.0.RELEASE"
          description: Spring Cloud Circuit breaker with Resilience4j as the underlying implementation.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-circuitbreaker-resilience4j
          links:
            - rel: reference
              href: https://cloud.spring.io/spring-cloud-static/spring-cloud-circuitbreaker/current/reference/html
        - name: Hystrix [Maintenance]
          id: cloud-hystrix
          description: Circuit breaker with Spring Cloud Netflix Hystrix.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-hystrix
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
          links:
            - rel: guide
              href: https://spring.io/guides/gs/circuit-breaker/
              description: Circuit Breaker
        - name: Hystrix Dashboard [Maintenance]
          id: cloud-hystrix-dashboard
          description: Circuit breaker dashboard with Spring Cloud Netflix Hystrix.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-hystrix-dashboard
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
        - name: Turbine [Maintenance]
          id: cloud-turbine
          description: Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-turbine
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
        - name: Turbine Stream [Maintenance]
          id: cloud-turbine-stream
          description: Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (requires a binder, e.g. Apache Kafka or RabbitMQ).
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-netflix-turbine-stream
          compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
    - name: Spring Cloud Tracing
      bom: spring-cloud
      content:
        - name: Sleuth
          id: cloud-starter-sleuth
          description: Distributed tracing via logs with Spring Cloud Sleuth.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-sleuth
        - name: Zipkin Client
          id: cloud-starter-zipkin
          description: Distributed tracing with an existing Zipkin installation and Spring Cloud Sleuth Zipkin.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-zipkin
    - name: Spring Cloud Messaging
      bom: spring-cloud
      content:
        - name: Cloud Bus
          id: cloud-bus
          description: Links nodes of a distributed system with a lightweight message broker which can used to broadcast state changes or other management instructions (requires a binder, e.g. Apache Kafka or RabbitMQ).
          groupId: org.springframework.cloud
          artifactId: spring-cloud-bus
        - name: Cloud Stream
          id: cloud-stream
          description: Framework for building highly scalable event-driven microservices connected with shared messaging systems (requires a binder, e.g. Apache Kafka, RabbitMQ or Solace PubSub+).
          groupId: org.springframework.cloud
          artifactId: spring-cloud-stream
        - name: Reactive Cloud Stream
          id: reactive-cloud-stream
          compatibilityRange: "[2.0.0.RELEASE,2.2.0.M1)"
          description: Reactive messaging microservices with Spring Cloud Stream (requires a binder, e.g. Apache Kafka or RabbitMQ).
          groupId: org.springframework.cloud
          artifactId: spring-cloud-stream-reactive
    - name: Pivotal Cloud Foundry
      bom: spring-cloud-services
      compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
      content:
        - name: Config Client (PCF)
          id: scs-config-client
          description: Config client on Pivotal Cloud Foundry.
          groupId: io.pivotal.spring.cloud
          artifactId: spring-cloud-services-starter-config-client
          starter: false
          links:
            - rel: reference
              href: https://docs.pivotal.io/spring-cloud-services/
        - name: Service Registry (PCF)
          id: scs-service-registry
          description: Eureka service discovery client on Pivotal Cloud Foundry.
          groupId: io.pivotal.spring.cloud
          artifactId: spring-cloud-services-starter-service-registry
          links:
            - rel: reference
              href: https://docs.pivotal.io/spring-cloud-services/
        - name: Circuit Breaker (PCF)
          id: scs-circuit-breaker
          description: Hystrix circuit breaker client on Pivotal Cloud Foundry.
          groupId: io.pivotal.spring.cloud
          artifactId: spring-cloud-services-starter-circuit-breaker
          links:
            - rel: reference
              href: https://docs.pivotal.io/spring-cloud-services/
    - name: Amazon Web Services
      bom: spring-cloud
      compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
      content:
        - name: AWS Core
          id: cloud-aws
          description: AWS native services from Spring Cloud for AWS.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-aws
          starter: false
        - name: AWS RDS
          id: cloud-aws-jdbc
          description: Relational databases on AWS with RDS and Spring Cloud AWS JDBC.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-aws-jdbc
          starter: false
        - name: AWS Simple Queue Service
          id: cloud-aws-messaging
          description: Messaging on AWS with SQS and Spring Cloud AWS Messaging.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-starter-aws-messaging
          starter: false
    - name: Microsoft Azure
      bom: azure
      compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
      content:
        - name: Azure Support
          id: azure-support
          groupId: com.microsoft.azure
          artifactId: azure-spring-boot-starter
          description: Auto-configuration for Azure Services (Service Bus, Storage, Active Directory, Cosmos DB, Key Vault, and more).
          links:
            - rel: reference
              href: https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot
        - name: Azure Active Directory
          id: azure-active-directory
          groupId: com.microsoft.azure
          artifactId: azure-active-directory-spring-boot-starter
          description: Spring Security integration with Azure Active Directory for authentication.
          links:
            - rel: guide
              href: https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-samples/azure-active-directory-spring-boot-sample
              description: Using Active Directory
            - rel: reference
              href: https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-starters/azure-active-directory-spring-boot-starter
        - name: Azure Key Vault
          id: azure-keyvault-secrets
          groupId: com.microsoft.azure
          artifactId: azure-keyvault-secrets-spring-boot-starter
          description: Manage application secrets and keys.
          links:
            - rel: guide
              href: https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-samples/azure-keyvault-secrets-spring-boot-sample
              description: Using Key Vault
            - rel: reference
              href: https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-starters/azure-keyvault-secrets-spring-boot-starter
        - name: Azure Storage
          id: azure-storage
          groupId: com.microsoft.azure
          artifactId: azure-storage-spring-boot-starter
          compatibilityRange: "[2.0.0.RELEASE,2.3.0.M1)"
          description: Azure Storage service integration.
          links:
            - rel: guide
              href: https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-samples/azure-storage-spring-boot-sample
              description: Using Azure Storage
            - rel: reference
              href: https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-starters/azure-storage-spring-boot-starter
    - name: Google Cloud Platform
      bom: spring-cloud
      compatibilityRange: "[2.0.0.RELEASE,2.4.0-M1)"
      content:
        - name: GCP Support
          id: cloud-gcp
          description: Contains auto-configuration support for every Spring Cloud GCP integration. Most of the auto-configuration code is only enabled if other dependencies are added to the classpath.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-gcp-starter
          links:
            - rel: reference
              href: https://cloud.spring.io/spring-cloud-gcp/reference/html/
            - rel: guide
              href: https://github.com/spring-cloud/spring-cloud-gcp/tree/master/spring-cloud-gcp-samples
              description: GCP Samples
        - name: GCP Messaging
          id: cloud-gcp-pubsub
          description: Adds the GCP Support entry and all the required dependencies so that the Google Cloud Pub/Sub integration work out of the box.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-gcp-starter-pubsub
          links:
            - rel: reference
              href: https://cloud.spring.io/spring-cloud-gcp/reference/html/#spring-integration
            - rel: guide
              href: https://github.com/spring-cloud/spring-cloud-gcp/tree/master/spring-cloud-gcp-samples/spring-cloud-gcp-pubsub-sample
              description: GCP Pub/Sub Sample
        - name: GCP Storage
          id: cloud-gcp-storage
          description: Adds the GCP Support entry and all the required dependencies so that the Google Cloud Storage integration work out of the box.
          groupId: org.springframework.cloud
          artifactId: spring-cloud-gcp-starter-storage
          links:
            - rel: reference
              href: https://cloud.spring.io/spring-cloud-gcp/reference/html/#spring-resources
            - rel: guide
              href: https://github.com/spring-cloud/spring-cloud-gcp/tree/master/spring-cloud-gcp-samples/spring-cloud-gcp-storage-resource-sample
              description: GCP Storage Sample
    - name: Alibaba
      bom: spring-cloud-alibaba
      compatibilityRange: "[2.2.0.RELEASE,2.3.0.M1)"
      content:
        - name: Nacos Configuration
          id: alibaba-nacos-config
          description: Support for externalized configuration in a distributed system, auto refresh when configuration changes.
          groupId: com.alibaba.cloud
          artifactId: spring-cloud-starter-alibaba-nacos-config
          starter: false
          links:
            - rel: reference
              href: https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_nacos_config
            - rel: guide
              href: https://github.com/alibaba/spring-cloud-alibaba/tree/master/spring-cloud-alibaba-examples/nacos-example/nacos-config-example
              description: Nacos Configuration Example
        - name: Nacos Service Discovery
          id: alibaba-nacos-discovery
          description: Service discovery with Alibaba Nacos.
          groupId: com.alibaba.cloud
          artifactId: spring-cloud-starter-alibaba-nacos-discovery
          links:
            - rel: reference
              href: https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_nacos_discovery
            - rel: guide
              href: https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/readme.md
              description: Nacos Service Discovery Example
        - name: Sentinel
          id: alibaba-sentinel
          description: Flow control and circuit breaking with Alibaba Sentinel.
          groupId: com.alibaba.cloud
          artifactId: spring-cloud-starter-alibaba-sentinel
          starter: false
          links:
            - rel: reference
              href: https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_sentinel
            - rel: guide
              href: https://github.com/alibaba/spring-cloud-alibaba/tree/master/spring-cloud-alibaba-examples/sentinel-example/sentinel-core-example
              description: Sentinel Example
  types:
    - name: Maven Project
      id: maven-project
      description: Generate a Maven based project archive.
      tags:
        build: maven
        format: project
      default: true
      action: /starter.zip
    - name: Maven POM
      id: maven-build
      description: Generate a Maven pom.xml.
      tags:
        build: maven
        format: build
      default: false
      action: /pom.xml
    - name: Gradle Project
      id: gradle-project
      description: Generate a Gradle based project archive.
      tags:
        build: gradle
        format: project
      default: false
      action: /starter.zip
    - name: Gradle Config
      id: gradle-build
      description: Generate a Gradle build file.
      tags:
        build: gradle
        format: build
      default: false
      action: /build.gradle
  packagings:
    - name: Jar
      id: jar
      default: true
    - name: War
      id: war
      default: false
  javaVersions:
    - id: 15
      default: false
    - id: 11
      default: true
    - id: 1.8
      name: 8
      default: false
  languages:
    - name: Java
      id: java
      default: true
    - name: Kotlin
      id: kotlin
      default: false
    - name: Groovy
      id: groovy
      default: false
  bootVersions:
    - name : Latest SNAPSHOT
      id: 2.2.0.BUILD-SNAPSHOT
      default: false
    - name : 2.1.1.
      id: 2.1.1.RELEASE
      default: true

---

spring:
  profiles: dev
  resources:
    static_locations:
      - file:start-client/public/
  devtools:
    restart:
      additional_paths:
        - start-client/public/
      additional_exclude: "**/*.js,**/*.css,**/*.html"
