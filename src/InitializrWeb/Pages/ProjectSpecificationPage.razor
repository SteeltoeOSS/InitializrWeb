@page "/"

<h1>Steeltoe Initializr</h1>

@if (Configuration != null)
{
    <EditForm Model="@ProjectSpecification">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is3">Project Name</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is9">
                <TextEdit id="projectName"
                          @bind-Value="@ProjectSpecification.ProjectName"
                          class="form-control"
                          placeholder="@Configuration.Name.Default"/>
            </FieldBody>
        </Field>
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is3">Project Description</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is9">
                <TextEdit id="projectDescription"
                          @bind-Value="@ProjectSpecification.ProjectDescription"
                          class="form-control"
                          placeholder="@Configuration.Description.Default"/>
            </FieldBody>
        </Field>
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is3">Steeltoe Release</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is9">
                <Select TValue="string" id="steeltoeRelease"
                        @bind-Value="@ProjectSpecification.SteeltoeReleaseId">
                    @foreach (var steeltoeRelease in Configuration.SteeltoeRelease.Values)
                    {
                        <SelectItem TValue="string" value="@steeltoeRelease.Id" selected="@Configuration.SteeltoeRelease.Default">@steeltoeRelease.Name</SelectItem>
                    }
                </Select>
            </FieldBody>
        </Field>
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is3">DotNet Target Framework</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is9">
                <Select TValue="string" id="dotnetTargetFramework"
                        @bind-Value="@ProjectSpecification.DotnetFrameworkTargetId">
                    @foreach (var target in Configuration.DotnetFrameworkTarget.Values)
                    {
                        <SelectItem TValue="string" value="@target.Id" selected="@Configuration.DotnetFrameworkTarget.Default">@target.Name</SelectItem>
                    }
                </Select>
            </FieldBody>
        </Field>
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is3">DotNet Template</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is9">
                <Select TValue="string" id="dotnetTemplate"
                        @bind-Value="@ProjectSpecification.DotnetTemplateId">
                    @foreach (var template in Configuration.DotnetTemplate.Values)
                    {
                        <SelectItem TValue="string" value="@template.Id" selected="@Configuration.DotnetTemplate.Default">@template.Name [@template.Id]</SelectItem>
                    }
                </Select>
            </FieldBody>
        </Field>
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is3">Language</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is9">
                <Select TValue="string" id="language"
                        @bind-Value="@ProjectSpecification.DotnetLanguageId">
                    @foreach (var language in Configuration.DotnetLanguage.Values)
                    {
                        <SelectItem TValue="string" value="@language.Id" selected="@Configuration.DotnetLanguage.Default">@language.Name</SelectItem>
                    }
                </Select>
            </FieldBody>
        </Field>
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is3">Dependencies</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is9">
                <Select TValue="string" id="dependencies">
                    @foreach (var dependencyGroup in Configuration.Dependencies.Values)
                    {
                        @foreach (var dependency in dependencyGroup.Values)
                        {
                            <SelectItem TValue="string" value="@dependency.Id">@dependency.Name</SelectItem>
                        }
                    }
                    <SelectItem TValue="string" id></SelectItem>

                </Select>
            </FieldBody>
        </Field>
        <Button Color="Color.Primary">Generate Project</Button>
    </EditForm>
}
else if (@Error != null)
{
    <div class="error">
        Cannot connect to Web API: @Error.Message
    </div>
}
else
{
    <div class="spinner"></div>
}
