#@ load("@ytt:data", "data")

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ data.values.name
  namespace: #@ data.values.namespace
spec:
  selector:
    matchLabels:
      app: #@ data.values.name
  template:
    metadata:
      labels:
        app: #@ data.values.name
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: #@ data.values.name
        image: #@ "{}:{}".format(data.values.image_name, data.values.image_tag)
        ports:
        - containerPort: #@ int(data.values.container_port)
  replicas: #@ int(data.values.replica_count)

---
apiVersion: v1
kind: Service
metadata:
  name: #@ data.values.name
  namespace: #@ data.values.namespace
spec:
  ports:
  - port: #@ int(data.values.service_port)
    targetPort: #@ int(data.values.container_port)
  selector:
    app: #@ data.values.name

#@ if/end data.values.hostname:
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: #@ data.values.name
  namespace: #@ data.values.namespace
spec:
  virtualhost:
    fqdn: #@ data.values.hostname
    tls:
      secretName: #@ data.values.tls_secret
  routes:
    - conditions:
      - prefix: /
      services:
        - name: #@ data.values.name
          port: #@ int(data.values.service_port)
    - conditions:
      - prefix: /api
      services:
        - name: #@ data.values.backend_name
          port: #@ int(data.values.backend_port)
    - conditions:
      - prefix: /
        header:
          name: user-agent
          contains: curl
      pathRewritePolicy:
        replacePrefix:
          - replacement: /api
      services:
        - name: #@ data.values.backend_name
          port: #@ int(data.values.backend_port)
    - conditions:
      - prefix: /
        header:
          name: user-agent
          contains: HTTPie
      pathRewritePolicy:
        replacePrefix:
        - replacement: /api
      services:
        - name: #@ data.values.backend_name
          port: #@ int(data.values.backend_port)
